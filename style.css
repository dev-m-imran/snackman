@import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");

* {
  margin: 0;
  padding: 0;
  color: white;
  font-family: "Press Start 2P";
}

body {
  background-color: black;
  height: 100vh;
  display: grid;
  grid-template-columns: 1fr 80vh 1fr;
  grid-template-rows: auto;
  grid-template-areas:
    "header header header"
    "lboard main score"
    "lboard main controls";
  align-items: center;
  justify-items: center;
}

header {
  grid-area: header;
  text-align: center;
}

.startDiv {
  position: absolute;
  display: flex;
  height: 100vh;
  align-items: center;
  justify-content: center;
}

.startDiv div {
  background-color: #ccc;
  z-index: 100;
  cursor: pointer;
  border-radius: 20px;
  box-shadow: 4px 4px 4px #000;
  padding: 20px 30px;
  display: flex;
  height: 32px;
}

.startDiv h1 {
  text-shadow: 2px 2px 2px #000;
  font-size: 2em;
  text-decoration: none;
  margin-left: 10px;
}

header h1 {
  font-size: 4em;
}

main {
  grid-area: main;
  display: grid;
  grid-template-columns: repeat(10, 10%);
  width: 80vh;
  height: 80vh;
  align-items: center;
  justify-items: center;
}

/* Lives styling */
.lives {
  position: absolute;
  top: 0;
  right: 0;
  height: auto;
  display: flex;
  align-items: center;
  margin: 0.5em;
}

.lives li {
  list-style: none;
  background-color: yellow;
  width: 2em;
  height: 2em;
  border-radius: 100%;
  margin: 5px;
}

.lives ul {
  display: flex;
}

.score {
  grid-area: score;
}

.leaderboard {
  grid-area: lboard;
}

.leaderboard ol {
  margin-left: 2.5em;
  margin-top: 1em;
  text-align: left;
}

.leaderboard ol li {
  font-size: 0.85em;
  padding: 1em 0;
}

div {
  height: 100%;
  text-align: center;
}

div h1 {
  font-size: 1.25em;
  text-decoration: underline;
}

div p {
  margin: 0.5em;
  font-size: 2em;
}

#player {
  background-color: yellow;
  border-radius: 100%;
  position: relative;
  width: 85%;
  height: 85%;
  transition: background-color 0.2s linear;
}

#player.hit {
  background-color: red !important;
  animation: snackmanHitScale 0.7s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes snackmanHitScale {
  0% {
    transform: scale(1);
  }
  30% {
    transform: scale(1.25);
  }
  60% {
    transform: scale(0.7);
  }
  100% {
    transform: scale(1);
  }
}

.enemy {
  background-color: green;
  border-radius: 100%;
  height: 90%;
  width: 90%;
  position: relative;
}

.point {
  border-radius: 100%;
  background-color: white;
}

#game-over {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2em;
  color: red;
  background: rgba(0,0,0,0.8);
  padding: 20px 40px;
  border-radius: 10px;
  z-index: 1000;
}
.wall {
  background-color: blue;
  width: 100%;
  height: 100%;
}

/* Styles for the player direction */
.up,
.down,
.left,
.right {
  width: 100%;
  height: 100%;
  background-color: black;
  animation: mouth 1.25s infinite steps(1, end);
  position: absolute;
  top: 0;
  left: 0;
}

.up {
  clip-path: polygon(0 0, 100% 0, 50% 50%);
}
.down {
  clip-path: polygon(0 100%, 100% 100%, 50% 50%);
}
.left {
  clip-path: polygon(0 0, 0 100%, 50% 50%);
}
.right {
  clip-path: polygon(100% 0, 100% 100%, 50% 50%);
}

@keyframes mouth {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

/* Directional button styling */
.controls {
  grid-area: controls;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  grid-template-areas:
    ". upArrow ."
    "leftArrow . rightArrow"
    ". downArrow .";
  width: 25vh;
  height: 25vh;
}

button {
  background-color: rgb(10, 10, 10);
}

button:nth-child(1) {
  grid-area: leftArrow;
}
button:nth-child(2) {
  grid-area: upArrow;
}
button:nth-child(3) {
  grid-area: rightArrow;
}
button:nth-child(4) {
  grid-area: downArrow;
}

/* Remove old hit and dead styles */
#player.dead {
  animation: deathAnimation 2s ease-in-out forwards;
}

@keyframes deathAnimation {
  0% {
    transform: scale(1) rotate(0deg);
    opacity: 1;
    filter: brightness(1);
    background-color: yellow !important;
  }
  15% {
    transform: scale(0.9) rotate(45deg);
    opacity: 0.9;
    filter: brightness(1.2);
    background-color: red !important;
  }
  30% {
    transform: scale(0.8) rotate(90deg);
    opacity: 0.8;
    filter: brightness(1.3);
    background-color: red !important;
  }
  45% {
    transform: scale(0.7) rotate(135deg);
    opacity: 0.7;
    filter: brightness(1.4);
    background-color: red !important;
  }
  60% {
    transform: scale(0.5) rotate(180deg);
    opacity: 0.5;
    filter: brightness(1.6);
    background-color: red !important;
  }
  75% {
    transform: scale(0.3) rotate(270deg);
    opacity: 0.3;
    filter: brightness(1.8);
    background-color: red !important;
  }
  90% {
    transform: scale(0.1) rotate(315deg);
    opacity: 0.1;
    filter: brightness(1.9);
    background-color: red !important;
  }
  100% {
    transform: scale(0) rotate(360deg);
    opacity: 0;
    filter: brightness(2);
    background-color: red !important;
  }
}

/* Add flash effect for the entire game when hit */
@keyframes gameFlash {
  0% {
    filter: brightness(1);
  }
  20% {
    filter: brightness(1.5) sepia(0.5);
  }
  40% {
    filter: brightness(1);
  }
  60% {
    filter: brightness(1.5) sepia(0.5);
  }
  80% {
    filter: brightness(1);
  }
  100% {
    filter: brightness(1);
  }
}

.game-flash {
  animation: gameFlash 1.2s ease-in-out;
}
